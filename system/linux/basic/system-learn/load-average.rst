.. highlight:: rst

.. _system_linux_basic_system-learn_load-average:

linxu系统负载
----------------

系统负载反应的是在一定时间内，计算机当前的任务执行队列长度。常用的查看负载命令有: ``top`` ``w`` ``uptime``

命令下的负载表现为： ``load average: 1.66, 1.49, 1.43`` ,分别代表的是在过去1分钟 5分钟 15分钟的系统负载，一般情况下我们观察的是15分钟的平均负载，如果在过去15分钟，系统的平均负载都比较高，那么证明系统有问题。

在Linux中，进程分为三种状态，一种是阻塞的进程blocked process，一种是可运行的进程runnable process，另外就是正在运行的进程running process。当进程阻塞时，进程会等待I/O设备的数据或者系统调用

系统负载计算的是正在运行的进行和可运行的进程之和

如何评判系统的负载高低
=======================


考虑单核情况下，系统的满载为1.0，如果系统的平均负载大约1.0，那么证明系统处于高负荷状态，如果平均负载小于1.0,那么证明系统处于非满负荷状态，一般情况下，将负载0.7作为运行良好状态，如果系统负载长期那么0.7，那么需要考虑查询系统的运行。

针对于多核机器，满载负荷为cpu核数，例如，针对与8个核的机器，系统负载为5，那么平均到每个核上的负载为5//8= 0.625,属于运行良好状态。

所以考量系统的负载情况，除了关于系统的当前负载，也要结合系统的cpu核数来总和衡量。


可以通过命令 ``cat /proc/cpuinfo`` 来查看cpu信息 , ``grep -c 'model name' /proc/cpuinfo`` 来查看cpu核数


观察负载对系统的影响
========================

本机4核cpu，

1. 使用stress 模拟多进程

::
    
    1. stress -c 12 --timeout 600  # 使用12个进程在系统运行

    2. pidstat -u 5 1 通过pidstat查看进行的状态，看看进程的等待（wait)情况



.. tip::

    1. cpu利用率高不一定负载就高。因为系统的各个操作都会与cpu交互，如果是计算密集型，那么可能cpu利用率很高，但负载较低

    2. 网上有文章说：单核CPU，数值不超过3算是正常现象，当然在多核的情况下，在高负载时，使用当前负载（5分钟）除以CPU核心数，数值不大于3，表示压力不大，数值大于3小于5，表示适中，大于5，说明CPU已经进入高负荷阶段。这种说法可能是对于非实时响应任务来说吧。单个负荷为3可能是需要等待，但仍可保证系统的正常运行，但可能会有大量的任务等待而已。



