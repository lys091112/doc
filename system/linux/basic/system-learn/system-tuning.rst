.. highlight:: rst

.. _system_linux_basic_tools_system-tuning:

系统性能调优常用命令
-----------------------

1. vmstat

::

    procs -----------memory----------    ---swap-- -----io---- -system-- ------cpu-----
     r  b 交换   空闲    缓冲    缓存     si   so    bi    bo   in   cs us sy id wa st
     0  0 144896 562148 193172 1844028    0    1     37    59  269   21  8  2 89  0  0

 iostat -x -k -d 1 
    r 表示运行队列(就是说多少个进程真的分配到CPU)，我测试的服务器目前CPU比较空闲，没什么程序在跑，当这个值超过了CPU数目，就会出现CPU瓶颈了。这个也和top的负载有关系，一般负载超过了3就比较高，超过了5就高，超过了10就不正常了，服务器的状态很危险。top的负载类似每秒的运行队列。如果运行队列过大，表示你的CPU很繁忙，一般会造成CPU使用率很高。

    b 表示阻塞的进程,这个不多说，进程阻塞，大家懂的。
    swpd 虚拟内存已使用的大小，如果大于0，表示你的机器物理内存不足了，如果不是程序内存泄露的原因，那么你该升级内存了或者把耗内存的任务迁移到其他机器。
    free   空闲的物理内存的大小，我的机器内存总共8G，剩余3415M。
    buff   已使用的buff大小，对块设备的读写进行缓冲M
    cache cache直接用来记忆我们打开的文件,给文件做缓冲，把空闲的物理内存的一部分拿来做文件和目录的缓存，是为了提高 程序执行的性能，当程序使用内存时，buffer/cached会很快地被使用。)

    si  交换内存使用，由磁盘调入内存. 每秒从磁盘读入虚拟内存的大小，如果这个值大于0，表示物理内存不够用或者内存泄露了，要查找耗内存进程解决掉。

    so  交换内存使用，由内存调入磁盘,每秒虚拟内存写入磁盘的大小，如果这个值大于0，同上。

    bi 从块设备读入的数据总量(读磁盘) (KB/s)， 

    bo  写入到块设备的数据总理(写磁盘) (KB/s)

    in 每秒CPU的中断次数，包括时间中断

    cs 每秒上下文切换次数，例如我们调用系统函数，就要进行上下文切换，线程的切换，也要进程上下文切换，这个值要越小越好，太大了，要考虑调低线程或者进程的数目,例如在apache和nginx这种web服务器中，我们一般做性能测试时会进行几千并发甚至几万并发的测试，选择web服务器的进程可以由进程或者线程的峰值一直下调，压测，直到cs到一个比较小的值，这个进程和线程数就是比较合适的值了。系统调用也是，每次调用系统函数，我们的代码就会进入内核空间，导致上下文切换，这个是很耗资源，也要尽量避免频繁调用系统函数。上下文切换次数过多表示你的CPU大部分浪费在上下文切换，导致CPU干正经事的时间少了，CPU没有充分利用，是不可取的。

    us 用户CPU时间

    sy 系统CPU时间，如果太高，表示系统调用时间长

    id  空闲 CPU时间，一般来说，id + us + sy = 100,一般我认为id是空闲CPU使用率，us是用户CPU使用率，sy是系统CPU使用率。

    wa 等待IO CPU时间。 wa 的值高时，说明IO等待比较严重，这可能是由于磁盘大量作随机访问造成，也有可能是磁盘的带宽出现瓶颈(块操作)。

2. top

::
    top中一些字段的含义:
        VIRT：virtual memory usage 虚拟内存
        1、进程“需要的”虚拟内存大小，包括进程使用的库、代码、数据等
        2、假如进程申请100m的内存，但实际只使用了10m，那么它会增长100m，而不是实际的使用量

        RES：resident memory usage 常驻内存
        1、进程当前使用的内存大小，但不包括swap out
        2、包含其他进程的共享
        3、如果申请100m的内存，实际使用10m，它只增长10m，与VIRT相反
        4、关于库占用内存的情况，它只统计加载的库文件所占内存大小

        SHR：shared memory 共享内存
        1、除了自身进程的共享内存，也包括其他进程的共享内存
        2、虽然进程只使用了几个共享库的函数，但它包含了整个共享库的大小
        3、计算某个进程所占的物理内存大小公式：RES – SHR
        4、swap out后，它将会降下来

        DATA
        1、数据占用的内存。如果top没有显示，按f键可以显示出来。
        2、真正的该程序要求的数据空间，是真正在运行中要使用的。

        
3. pidstat

   pidstat 属于sysstat中的一种命令，在ubuntu中安装命令为： ``sudo apt install sysstat``

::

    常用参数：
    -u：默认的参数，显示各个进程的cpu使用统计
    -r：显示各个进程的内存使用统计
    -d：显示各个进程的IO使用情况
    -p：指定进程号
    -w：显示每个进程的上下文切换情况
    -t：显示选择任务的线程的统计信息外的额外信息
    -T { TASK | CHILD | ALL }
    这个选项指定了pidstat监控的。TASK表示报告独立的task，CHILD关键字表示报告进程下所有线程统计信息。ALL表示报告独立的task和task下面的所有线程。
    注意：task和子线程的全局的统计信息和pidstat选项无关。这些统计信息不会对应到当前的统计间隔，这些统计信息只有在子线程kill或者完成的时候才会被收集。
    -V：版本号
    -h：在一行上显示了所有活动，这样其他程序可以容易解析。
    -I：在SMP环境，表示任务的CPU使用率/内核数量
    -l：显示命令名和所有参数


    在pidstat -r下，参数含义为：
        PID：进程标识符
        Minflt/s:任务每秒发生的次要错误，不需要从磁盘中加载页
        Majflt/s:任务每秒发生的主要错误，需要从磁盘中加载页
        VSZ：虚拟地址大小，虚拟内存的使用KB
        RSS：常驻集合大小，非交换区五里内存使用KB
        Command：task命令名

    在pidstat -d下，的io含义为：
        PID：进程id
        kB_rd/s：每秒从磁盘读取的KB
        kB_wr/s：每秒写入磁盘KB
        kB_ccwr/s：任务取消的写入磁盘的KB。当任务截断脏的pagecache的时候会发生。
        COMMAND:task的命令名


    在pidstat -w 上下文切换情况：

        PID:进程id
        Cswch/s:每秒主动任务上下文切换数量
        Nvcswch/s:每秒被动任务上下文切换数量
        Command:命令名


